# packages
library(tidyverse)
library(ggplot2)
library(dplyr)
library(broom)

# constants
n <- 10000
sample_size <- 1000
a <- 10

# state pop. counts

n_d <- 779261
ohio <- 11756058
oklahoma <- 4019800
oregon <- 4240137
penn <- 12972008
r_i <- 1093734
south_carolina <- 5282634
s_d <- 909824
tenn <- 7051339
texas <- 30029572
utah <- 3380800
vermont <- 647064
virginia <- 8683619
wash <- 7785786
w_v <- 1775156
wisconsin <- 5892539
wyo <- 581381

## n.d.
b_func_nd_rep <- function(a) { 
  (a-a*.56036)/.56036}

results_nd_rep <- matrix(0, nrow = n, ncol = 1) 

bi_nd_rep <- rbeta(n,a,b_func_nd_rep(a))
pop_nd_rep <- rbinom(n_d, size = 1, bi_nd_rep)

for (i in 1:n) {
  sample_nd <- sample(pop_nd_rep, size = sample_size, replace = TRUE)
  bwinsnd <- (sample_nd == 1)
  probability_nd_rep <- mean(bwinsnd)
  results_nd_rep[i]<- probability_nd_rep
}

b_func_nd_dem <- function(a) { 
  (a-a*.38722)/.38722}

results_nd_dem <- matrix(0, nrow = n, ncol = 1) 

bi_nd_dem <- rbeta(n,a,b_func_nd_dem(a))
pop_nd_dem <- rbinom(n_d, size = 1, bi_nd_dem)

for (i in 1:n) {
  sample_nd_dem <- sample(pop_nd_dem, size = sample_size, replace = TRUE)
  bwinsnd_dem <- (sample_nd_dem == 1)
  probability_nd_dem <- mean(bwinsnd_dem)
  results_nd_dem[i] <- probability_nd_dem
}

## ohio
b_func_ohio_rep <- function(a) { 
  (a-a*.47527)/.47527}

results_ohio_rep <- matrix(0, nrow = n, ncol = 1) 

bi_ohio_rep <- rbeta(n,a,b_func_ohio_rep(a))
pop_ohio_rep <- rbinom(ohio, size = 1, bi_ohio_rep)

for (i in 1:n) {
  sample_ohio <- sample(pop_ohio_rep, size = sample_size, replace = TRUE)
  bwinsohio <- (sample_ohio == 1)
  probability_ohio_rep <- mean(bwinsohio)
  results_ohio_rep[i]<- probability_ohio_rep
}

b_func_ohio_dem <- function(a) { 
  (a-a*.46772)/.46772}

results_ohio_dem <- matrix(0, nrow = n, ncol = 1) 

bi_ohio_dem <- rbeta(n,a,b_func_ohio_dem(a))
pop_ohio_dem <- rbinom(ohio, size = 1, bi_ohio_dem)

for (i in 1:n) {
  sample_ohio_dem <- sample(pop_ohio_dem, size = sample_size, replace = TRUE)
  bwinsohio_dem <- (sample_ohio_dem == 1)
  probability_ohio_dem <- mean(bwinsohio_dem)
  results_ohio_dem[i] <- probability_ohio_dem
}

## oklahoma
b_func_ok_rep <- function(a) { 
  (a-a*.59183)/.59183}

results_ok_rep <- matrix(0, nrow = n, ncol = 1) 

bi_ok_rep <- rbeta(n,a,b_func_ok_rep(a))
pop_ok_rep <- rbinom(oklahoma, size = 1, bi_ok_rep)

for (i in 1:n) {
  sample_ok <- sample(pop_ok_rep, size = sample_size, replace = TRUE)
  bwinsok <- (sample_ok == 1)
  probability_ok_rep <- mean(bwinsok)
  results_ok_rep[i]<- probability_ok_rep
}

b_func_ok_dem <- function(a) { 
  (a-a*.36223)/.36223}

results_ok_dem <- matrix(0, nrow = n, ncol = 1) 

bi_ok_dem <- rbeta(n,a,b_func_ok_dem(a))
pop_ok_dem <- rbinom(oklahoma, size = 1, bi_ok_dem)

for (i in 1:n) {
  sample_ok_dem <- sample(pop_ok_dem, size = sample_size, replace = TRUE)
  bwinsok_dem <- (sample_ok_dem == 1)
  probability_ok_dem <- mean(bwinsok_dem)
  results_ok_dem[i] <- probability_ok_dem
}

## oregon
b_func_or_rep <- function(a) { 
  (a-a*.37432)/.37432}

results_or_rep <- matrix(0, nrow = n, ncol = 1) 

bi_or_rep <- rbeta(n,a,b_func_or_rep(a))
pop_or_rep <- rbinom(oregon, size = 1, bi_or_rep)

for (i in 1:n) {
  sample_or <- sample(pop_or_rep, size = sample_size, replace = TRUE)
  bwinsor <- (sample_or == 1)
  probability_or_rep <- mean(bwinsor)
  results_or_rep[i]<- probability_or_rep
}

b_func_or_dem <- function(a) { 
  (a-a*.58704)/.58704}

results_or_dem <- matrix(0, nrow = n, ncol = 1) 

bi_or_dem <- rbeta(n,a,b_func_or_dem(a))
pop_or_dem <- rbinom(oregon, size = 1, bi_or_dem)

for (i in 1:n) {
  sample_or_dem <- sample(pop_or_dem, size = sample_size, replace = TRUE)
  bwinsor_dem <- (sample_or_dem == 1)
  probability_or_dem <- mean(bwinsor_dem)
  results_or_dem[i] <- probability_or_dem
}

## pennysylvania
b_func_pa_rep <- function(a) { 
  (a-a*.4555)/.4555}

results_pa_rep <- matrix(0, nrow = n, ncol = 1) 

bi_pa_rep <- rbeta(n,a,b_func_pa_rep(a))
pop_pa_rep <- rbinom(penn, size = 1, bi_pa_rep)

for (i in 1:n) {
  sample_pa <- sample(pop_pa_rep, size = sample_size, replace = TRUE)
  bwinspa <- (sample_pa == 1)
  probability_pa_rep <- mean(bwinspa)
  results_pa_rep[i]<- probability_pa_rep
}

b_func_pa_dem <- function(a) { 
  (a-a*.50204)/.50204}

results_pa_dem <- matrix(0, nrow = n, ncol = 1) 

bi_pa_dem <- rbeta(n,a,b_func_pa_dem(a))
pop_pa_dem <- rbinom(penn, size = 1, bi_pa_dem)

for (i in 1:n) {
  sample_pa_dem <- sample(pop_pa_dem, size = sample_size, replace = TRUE)
  bwinspa_dem <- (sample_pa_dem == 1)
  probability_pa_dem <- mean(bwinspa_dem)
  results_pa_dem[i] <- probability_pa_dem
}

## rhode island
b_func_ri_rep <- function(a) { 
  (a-a*.32364)/.32364}

results_ri_rep <- matrix(0, nrow = n, ncol = 1) 

bi_ri_rep <- rbeta(n,a,b_func_ri_rep(a))
pop_ri_rep <- rbinom(r_i, size = 1, bi_ri_rep)

for (i in 1:n) {
  sample_ri <- sample(pop_ri_rep, size = sample_size, replace = TRUE)
  bwinsri <- (sample_ri == 1)
  probability_ri_rep <- mean(bwinsri)
  results_ri_rep[i]<- probability_ri_rep
}

b_func_ri_dem <- function(a) { 
  (a-a*.62929)/.62929}

results_ri_dem <- matrix(0, nrow = n, ncol = 1) 

bi_ri_dem <- rbeta(n,a,b_func_ri_dem(a))
pop_ri_dem <- rbinom(r_i, size = 1, bi_ri_dem)

for (i in 1:n) {
  sample_ri_dem <- sample(pop_ri_dem, size = sample_size, replace = TRUE)
  bwinsri_dem <- (sample_ri_dem == 1)
  probability_ri_dem <- mean(bwinsri_dem)
  results_ri_dem[i] <- probability_ri_dem
}

## south carolina
b_func_sc_rep <- function(a) { 
  (a-a*.5159)/.5159}

results_sc_rep <- matrix(0, nrow = n, ncol = 1) 

bi_sc_rep <- rbeta(n,a,b_func_sc_rep(a))
pop_sc_rep <- rbinom(south_carolina, size = 1, bi_sc_rep)

for (i in 1:n) {
  sample_sc <- sample(pop_sc_rep, size = sample_size, replace = TRUE)
  bwinssc <- (sample_sc == 1)
  probability_sc_rep <- mean(bwinssc)
  results_sc_rep[i]<- probability_sc_rep
}

b_func_sc_dem <- function(a) { 
  (a-a*.44508)/.44508}

results_sc_dem <- matrix(0, nrow = n, ncol = 1) 

bi_sc_dem <- rbeta(n,a,b_func_sc_dem(a))
pop_sc_dem <- rbinom(south_carolina, size = 1, bi_sc_dem)

for (i in 1:n) {
  sample_sc_dem <- sample(pop_sc_dem, size = sample_size, replace = TRUE)
  bwinssc_dem <- (sample_sc_dem == 1)
  probability_sc_dem <- mean(bwinssc_dem)
  results_sc_dem[i] <- probability_sc_dem
}

## south dakota
b_func_sd_rep <- function(a) { 
  (a-a*.54486)/.54486}

results_sd_rep <- matrix(0, nrow = n, ncol = 1) 

bi_sd_rep <- rbeta(n,a,b_func_sd_rep(a))
pop_sd_rep <- rbinom(s_d, size = 1, bi_sd_rep)

for (i in 1:n) {
  sample_sd <- sample(pop_sd_rep, size = sample_size, replace = TRUE)
  bwinssd <- (sample_sd == 1)
  probability_sd_rep <- mean(bwinssd)
  results_sd_rep[i]<- probability_sd_rep
}

b_func_sd_dem <- function(a) { 
  (a-a*.39042)/.39042}

results_sd_dem <- matrix(0, nrow = n, ncol = 1) 

bi_sd_dem <- rbeta(n,a,b_func_sd_dem(a))
pop_sd_dem <- rbinom(s_d, size = 1, bi_sd_dem)

for (i in 1:n) {
  sample_sd_dem <- sample(pop_sd_dem, size = sample_size, replace = TRUE)
  bwinssd_dem <- (sample_sd_dem == 1)
  probability_sd_dem <- mean(bwinssd_dem)
  results_sd_dem[i] <- probability_sd_dem
}

## Tennessee
b_func_tn_rep <- function(a) { 
  (a-a*.55117)/.55117}

results_tn_rep <- matrix(0, nrow = n, ncol = 1) 

bi_tn_rep <- rbeta(n,a,b_func_tn_rep(a))
pop_tn_rep <- rbinom((tenn), size = 1, bi_tn_rep)

for (i in 1:n) {
  sample_tn <- sample(pop_tn_rep, size = sample_size, replace = TRUE)
  bwinstn <- (sample_tn == 1)
  probability_tn_rep <- mean(bwinstn)
  results_tn_rep[i]<- probability_tn_rep
}

b_func_tn_dem <- function(a) { 
  (a-a*.41424)/.41424}

results_tn_dem <- matrix(0, nrow = n, ncol = 1) 

bi_tn_dem <- rbeta(n,a,b_func_tn_dem(a))
pop_tn_dem <- rbinom(tenn, size = 1, bi_tn_dem)

for (i in 1:n) {
  sample_tn_dem <- sample(pop_tn_dem, size = sample_size, replace = TRUE)
  bwinstn_dem <- (sample_tn_dem == 1)
  probability_tn_dem <- mean(bwinstn_dem)
  results_tn_dem[i] <- probability_tn_dem
}

## Texas
b_func_tx_rep <- function(a) { 
  (a-a*.48588)/.48588}

results_tx_rep <- matrix(0, nrow = n, ncol = 1) 

bi_tx_rep <- rbeta(n,a,b_func_tx_rep(a))
pop_tx_rep <- rbinom(texas, size = 1, bi_tx_rep)

for (i in 1:n) {
  sample_tx <- sample(pop_tx_rep, size = sample_size, replace = TRUE)
  bwinstx <- (sample_tx == 1)
  probability_tx_rep <- mean(bwinstx)
  results_tx_rep[i]<- probability_tx_rep
}

b_func_tx_dem <- function(a) { 
  (a-a*.47448)/.47448}

results_tx_dem <- matrix(0, nrow = n, ncol = 1) 

bi_tx_dem <- rbeta(n,a,b_func_tx_dem(a))
pop_tx_dem <- rbinom(texas, size = 1, bi_tx_dem)

for (i in 1:n) {
  sample_tx_dem <- sample(pop_tx_dem, size = sample_size, replace = TRUE)
  bwinstx_dem <- (sample_tx_dem == 1)
  probability_tx_dem <- mean(bwinstx_dem)
  results_tx_dem[i] <- probability_tx_dem
}

## Utah
b_func_ut_rep <- function(a) { 
  (a-a*.5192)/.5192}

results_ut_rep <- matrix(0, nrow = n, ncol = 1) 

bi_ut_rep <- rbeta(n,a,b_func_ut_rep(a))
pop_ut_rep <- rbinom(utah, size = 1, bi_ut_rep)

for (i in 1:n) {
  sample_ut <- sample(pop_ut_rep, size = sample_size, replace = TRUE)
  bwinsut <- (sample_ut == 1)
  probability_ut_rep <- mean(bwinsut)
  results_ut_rep[i]<- probability_ut_rep
}

b_func_ut_dem <- function(a) { 
  (a-a*.42075)/.42075}

results_ut_dem <- matrix(0, nrow = n, ncol = 1) 

bi_ut_dem <- rbeta(n,a,b_func_ut_dem(a))
pop_ut_dem <- rbinom(utah, size = 1, bi_ut_dem)

for (i in 1:n) {
  sample_ut_dem <- sample(pop_ut_dem, size = sample_size, replace = TRUE)
  bwinsut_dem <- (sample_ut_dem == 1)
  probability_ut_dem <- mean(bwinsut_dem)
  results_ut_dem[i] <- probability_ut_dem
}

## Vermont
b_func_vt_rep <- function(a) { 
  (a-a*.27771)/.27771}

results_vt_rep <- matrix(0, nrow = n, ncol = 1) 

bi_vt_rep <- rbeta(n,a,b_func_vt_rep(a))
pop_vt_rep <- rbinom(vermont, size = 1, bi_vt_rep)

for (i in 1:n) {
  sample_vt<- sample(pop_vt_rep, size = sample_size, replace = TRUE)
  bwinsvt <- (sample_vt == 1)
  probability_vt_rep <- mean(bwinsvt)
  results_vt_rep[i]<- probability_vt_rep
}

b_func_vt_dem <- function(a) { 
  (a-a*.66516)/.66516}

results_vt_dem <- matrix(0, nrow = n, ncol = 1) 

bi_vt_dem <- rbeta(n,a,b_func_vt_dem(a))
pop_vt_dem <- rbinom(vermont, size = 1, bi_vt_dem)

for (i in 1:n) {
  sample_vt_dem <- sample(pop_vt_dem, size = sample_size, replace = TRUE)
  bwinsvt_dem <- (sample_vt_dem == 1)
  probability_vt_dem <- mean(bwinsvt_dem)
  results_vt_dem[i] <- probability_vt_dem
}

## Virginia
b_func_va_rep <- function(a) { 
  (a-a*.41901)/.41901}

results_va_rep <- matrix(0, nrow = n, ncol = 1) 

bi_va_rep <- rbeta(n,a,b_func_va_rep(a))
pop_va_rep <- rbinom(virginia, size = 1, bi_va_rep)

for (i in 1:n) {
  sample_va <- sample(pop_va_rep, size = sample_size, replace = TRUE)
  bwinsva <- (sample_va == 1)
  probability_va_rep <- mean(bwinsva)
  results_va_rep[i]<- probability_va_rep
}

b_func_va_dem <- function(a) { 
  (a-a*.53721)/.53721}

results_va_dem <- matrix(0, nrow = n, ncol = 1) 

bi_va_dem <- rbeta(n,a,b_func_va_dem(a))
pop_va_dem <- rbinom(virginia, size = 1, bi_va_dem)

for (i in 1:n) {
  sample_va_dem <- sample(pop_va_dem, size = sample_size, replace = TRUE)
  bwinsva_dem <- (sample_va_dem == 1)
  probability_va_dem <- mean(bwinsva_dem)
  results_va_dem[i] <- probability_va_dem
}

## Washington
b_func_wa_rep <- function(a) { 
  (a-a*.36444)/.36444}

results_wa_rep <- matrix(0, nrow = n, ncol = 1) 

bi_wa_rep <- rbeta(n,a,b_func_wa_rep(a))
pop_wa_rep <- rbinom((wash), size = 1, bi_wa_rep)

for (i in 1:n) {
  sample_wa <- sample(pop_wa_rep, size = sample_size, replace = TRUE)
  bwinswa <- (sample_wa == 1)
  probability_wa_rep <- mean(bwinswa)
  results_wa_rep[i]<- probability_wa_rep
}

b_func_wa_dem <- function(a) { 
  (a-a*.59394)/.59394}

results_wa_dem <- matrix(0, nrow = n, ncol = 1) 

bi_wa_dem <- rbeta(n,a,b_func_wa_dem(a))
pop_wa_dem <- rbinom(wash, size = 1, bi_wa_dem)

for (i in 1:n) {
  sample_wa_dem <- sample(pop_wa_dem, size = sample_size, replace = TRUE)
  bwinswa_dem <- (sample_wa_dem == 1)
  probability_wa_dem <- mean(bwinswa_dem)
  results_wa_dem[i] <- probability_wa_dem
}

## West Virginia
b_func_wv_rep <- function(a) { 
  (a-a*.61896)/.61896}

results_wv_rep <- matrix(0, nrow = n, ncol = 1) 

bi_wv_rep <- rbeta(n,a,b_func_wv_rep(a))
pop_wv_rep <- rbinom((w_v), size = 1, bi_wv_rep)

for (i in 1:n) {
  sample_wv <- sample(pop_wv_rep, size = sample_size, replace = TRUE)
  bwinswv <- (sample_wv == 1)
  probability_wv_rep <- mean(bwinswv)
  results_wv_rep[i]<- probability_wv_rep
}

b_func_wv_dem <- function(a) { 
  (a-a*.33491)/.33491}

results_wv_dem <- matrix(0, nrow = n, ncol = 1) 

bi_wv_dem <- rbeta(n,a,b_func_wv_dem(a))
pop_wv_dem <- rbinom(w_v, size = 1, bi_wv_dem)

for (i in 1:n) {
  sample_wv_dem <- sample(pop_wv_dem, size = sample_size, replace = TRUE)
  bwinswv_dem <- (sample_wv_dem == 1)
  probability_wv_dem <- mean(bwinswv_dem)
  results_wv_dem[i] <- probability_wv_dem
}

## Wisconsin
b_func_wi_rep <- function(a) { 
  (a-a*.43666)/.43666}

results_wi_rep <- matrix(0, nrow = n, ncol = 1) 

bi_wi_rep <- rbeta(n,a,b_func_wi_rep(a))
pop_wi_rep <- rbinom((wisconsin), size = 1, bi_wi_rep)

for (i in 1:n) {
  sample_wi <- sample(pop_wi_rep, size = sample_size, replace = TRUE)
  bwinswi <- (sample_wi == 1)
  probability_wi_rep <- mean(bwinswi)
  results_wi_rep[i]<- probability_wi_rep
}

b_func_wi_dem <- function(a) { 
  (a-a*.52126)/.52126}

results_wi_dem <- matrix(0, nrow = n, ncol = 1) 

bi_wi_dem <- rbeta(n,a,b_func_wi_dem(a))
pop_wi_dem <- rbinom(wisconsin, size = 1, bi_wi_dem)

for (i in 1:n) {
  sample_wi_dem <- sample(pop_wi_dem, size = sample_size, replace = TRUE)
  bwinswi_dem <- (sample_wi_dem == 1)
  probability_wi_dem <- mean(bwinswi_dem)
  results_wi_dem[i] <- probability_wi_dem
}


## Wyoming
b_func_wy_rep <- function(a) { 
  (a-a*.6231)/.6231}

results_wy_rep <- matrix(0, nrow = n, ncol = 1) 

bi_wy_rep <- rbeta(n,a,b_func_wy_rep(a))
pop_wy_rep <- rbinom((wyo), size = 1, bi_wy_rep)

for (i in 1:n) {
  sample_wy <- sample(pop_wy_rep, size = sample_size, replace = TRUE)
  bwinswy <- (sample_wy == 1)
  probability_wy_rep <- mean(bwinswy)
  results_wy_rep[i]<- probability_wy_rep
}

b_func_wy_dem <- function(a) { 
  (a-a*.3083)/.3083}

results_wy_dem <- matrix(0, nrow = n, ncol = 1) 

bi_wy_dem <- rbeta(n,a,b_func_wy_dem(a))
pop_wy_dem <- rbinom(wyo, size = 1, bi_wy_dem)

for (i in 1:n) {
  sample_wy_dem <- sample(pop_wy_dem, size = sample_size, replace = TRUE)
  bwinswy_dem <- (sample_wy_dem == 1)
  probability_wy_dem <- mean(bwinswy_dem)
  results_wy_dem[i] <- probability_wy_dem
}

```{r}
#Trump Alabama

t_func_alab<- function(a) { 
  (a-a*.57361)/.57361}

alabama<- 5074296
n<- 10000
sample_size <- 1000
resultst_alab <- matrix(0, nrow = n, ncol = 1)

a<- 10
t_alab<- rbeta(n,a,t_func_alab(a))
pop_alab_t <- rbinom(cali, size = 1, t_alab)

for (i in 1:n) {
  sample_alab_t <- sample(pop_alab_t, size = sample_size, replace = TRUE)
  twinsalab <- (sample_alab_t == 1)
  probabilityt_alab<- mean(twinsalab)
  resultst_alab[i]<- probabilityt_alab
}

```


```{r}
#Biden Alabama

b_func_alab<- function(a) { 
  (a-a*.37827)/.37827}

alabama<- 5074296
n<- 10000
sample_size <- 1000
resultsb_alab <- matrix(0, nrow = n, ncol = 1)

a<- 10
b_alab<- rbeta(n,a,b_func_alab(a))
pop_alab_b <- rbinom(cali, size = 1, b_alab)

for (i in 1:n) {
  sample_alab_b <- sample(pop_alab_b, size = sample_size, replace = TRUE)
  bwinsalab <- (sample_alab_b == 1)
  probabilityb_alab<- mean(bwinsalab)
  resultsb_alab[i]<- probabilityb_alab
}

```


```{r}
#Trump Alaska 

t_func_ak<- function(a) { 
  (a-a*.51232)/.51232}

alaska<- 733583
n<- 10000
sample_size <- 1000
resultst_ak <- matrix(0, nrow = n, ncol = 1)

a<- 10
t_ak<- rbeta(n,a,t_func_ak(a))
pop_ak_t <- rbinom(alaska, size = 1, t_ak)

for (i in 1:n) {
  sample_ak_t <- sample(pop_ak_t, size = sample_size, replace = TRUE)
  twinsak <- (sample_ak_t == 1)
  probabilityt_ak<- mean(twinsak)
  resultst_ak[i]<- probabilityt_ak
}

```

```{r}
#Biden Alaska 

b_func_ak<- function(a) { 
  (a-a*.43570)/.43570}

alaska<- 733583
n<- 10000
sample_size <- 1000
resultsb_ak <- matrix(0, nrow = n, ncol = 1)

a<- 10
b_ak<- rbeta(n,a,b_func_ak(a))
pop_ak_b <- rbinom(alaska, size = 1, b_ak)

for (i in 1:n) {
  sample_ak_b <- sample(pop_ak_b, size = sample_size, replace = TRUE)
  bwinsak <- (sample_ak_b == 1)
  probabilityb_ak<- mean(bwinsak)
  resultsb_ak[i]<- probabilityb_ak
}


```

```{r}
# Trump Arizona 

t_func_az<- function(a) { 
  (a-a*.46102)/.46102}

arizona<- 7359197
n<- 10000
sample_size <- 1000
resultst_az <- matrix(0, nrow = n, ncol = 1)

a<- 10
t_az<- rbeta(n,a,t_func_az(a))
pop_az_t <- rbinom(arizona, size = 1, t_az)

for (i in 1:n) {
  sample_az_t <- sample(pop_az_t, size = sample_size, replace = TRUE)
  twinsaz <- (sample_az_t == 1)
  probabilityt_az<- mean(twinsaz)
  resultst_az[i]<- probabilityt_az
}

```

```{r}
# Biden Arizona 

b_func_az<- function(a) { 
  (a-a*.48705)/.48705}

arizona<- 7359197
n<- 10000
sample_size <- 1000
resultsb_az <- matrix(0, nrow = n, ncol = 1)

a<- 10
b_az<- rbeta(n,a,b_func_az(a))
pop_az_b <- rbinom(arizona, size = 1, b_az)

for (i in 1:n) {
  sample_az_b <- sample(pop_az_b, size = sample_size, replace = TRUE)
  bwinsaz <- (sample_az_b == 1)
  probabilityb_az<- mean(bwinsaz)
  resultsb_az[i]<- probabilityb_az
}

```

```{r}
demaz<- tibble(resultsb_az)

ggplot(demaz, aes(x= resultsb_az[,1])) + 
  geom_histogram(bins = 30, color = "black", fill = "light blue") +
   geom_vline(aes(xintercept = mean(resultsb_az)), color= "black", size = .5, linetype= "dashed") + 
  theme(panel.background = element_rect(fill = "white", color = "black")) + 
  ggtitle("Dem Votes in Arizona") + xlab("Votes") + ylab("Count")

```

```{r}
# Trump Arkansas 

t_func_ar<- function(a) { 
  (a-a*.58949)/.58949}

arkansas<- 3045637
n<- 10000
sample_size <- 1000
resultst_ar <- matrix(0, nrow = n, ncol = 1)

a<- 10
t_ar<- rbeta(n,a,t_func_ar(a))
pop_ar_t <- rbinom(arkansas, size = 1, t_ar)

for (i in 1:n) {
  sample_ar_t <- sample(pop_ar_t, size = sample_size, replace = TRUE)
  twinsar <- (sample_ar_t == 1)
  probabilityt_ar<- mean(twinsar)
  resultst_ar[i]<- probabilityt_ar
}

```

```{r}
# Biden Arkansas

b_func_ar<- function(a) { 
  (a-a*.36178)/.36178}

arkansas<- 3045637
n<- 10000
sample_size <- 1000
resultsb_ar <- matrix(0, nrow = n, ncol = 1)

a<- 10
b_ar<- rbeta(n,a,b_func_ar(a))
pop_ar_b <- rbinom(arkansas, size = 1, b_ar)

for (i in 1:n) {
  sample_ar_b <- sample(pop_ar_b, size = sample_size, replace = TRUE)
  bwinsar <- (sample_ar_b == 1)
  probabilityb_ar<- mean(bwinsar)
  resultsb_ar[i]<- probabilityb_ar
}

```

```{r}
#Trump California

t_func_cali<- function(a) { 
  (a-a*.32436)/.32436}

cali<- 39029342
n<- 10000
sample_size <- 1000
resultst_cali <- matrix(0, nrow = n, ncol = 1)

a<- 10
t_cal<- rbeta(n,a,t_func_cali(a))
pop_cali_t <- rbinom(cali, size = 1, t_cal)

for (i in 1:n) {
  sample_cali_t <- sample(pop_cali_t, size = sample_size, replace = TRUE)
  twinscali <- (sample_cali_t == 1)
  probabilityt_cali<- mean(twinscali)
  resultst_cali[i]<- probabilityt_cali
}

```

```{r}
#Biden California 

b_func_cali<- function(a) { 
  (a-a*.61625)/.61625}

cali<- 39029342
n<- 10000
sample_size <- 1000
resultsb_cali <- matrix(0, nrow = n, ncol = 1)

a<- 10
b_cal<- rbeta(n,a,b_func_cali(a))
pop_cali_b <- rbinom(cali, size = 1, b_cal)

for (i in 1:n) {
  sample_cali_b <- sample(pop_cali_b, size = sample_size, replace = TRUE)
  bwinscali <- (sample_cali_b == 1)
  probabilityb_cali<- mean(bwinscali)
  resultsb_cali[i]<- probabilityb_cali
}

```

```{r}
#Trump in Colorado 

t_func_co<- function(a) { 
  (a-a*.41150)/.41150}

CO<- 5839926
n<- 10000
sample_size <- 1000
resultst_co <- matrix(0, nrow = n, ncol = 1)

a<- 10
t_co<- rbeta(n,a,t_func_co(a))
pop_co_t <- rbinom(CO, size = 1, t_co)

for (i in 1:n) {
  sample_co_t <- sample(pop_co_t, size = sample_size, replace = TRUE)
  twinsco <- (sample_co_t == 1)
  probabilityt_co<- mean(twinsco)
  resultst_co[i]<- probabilityt_co
}

```

```{r}
#Biden Colorado 

b_func_co<- function(a) { 
  (a-a*.53605)/.53605}

CO<- 5839926
n<- 10000
sample_size <- 1000
resultsb_co <- matrix(0, nrow = n, ncol = 1)

a<- 10
b_co<- rbeta(n,a,b_func_co(a))
pop_co_b <- rbinom(CO, size = 1, b_co)

for (i in 1:n) {
  sample_co_b <- sample(pop_co_b, size = sample_size, replace = TRUE)
  bwinsco <- (sample_co_b == 1)
  probabilityb_co<- mean(bwinsco)
  resultsb_co[i]<- probabilityb_co
}

```

```{r}
# Trump Connecticut

t_func_ct<- function(a) { 
  (a-a*.32366)/.32366}

connecticut<- 3626205
n<- 10000
sample_size <- 1000
resultst_ct <- matrix(0, nrow = n, ncol = 1)

a<- 10
t_ct<- rbeta(n,a,t_func_ct(a))
pop_ct_t <- rbinom(connecticut, size = 1, t_ct)

for (i in 1:n) {
  sample_ct_t <- sample(pop_ct_t, size = sample_size, replace = TRUE)
  twinsct <- (sample_ct_t == 1)
  probabilityt_ct<- mean(twinsct)
  resultst_ct[i]<- probabilityt_ct
}

```

```{r}
# Biden Connecticut

b_func_ct<- function(a) { 
  (a-a*.58623)/.58623}

connecticut<- 3626205
n<- 10000
sample_size <- 1000
resultsb_ct <- matrix(0, nrow = n, ncol = 1)

a<- 10
b_ct<- rbeta(n,a,b_func_ct(a))
pop_ct_b <- rbinom(connecticut, size = 1, b_ct)

for (i in 1:n) {
  sample_ct_b <- sample(pop_ct_b, size = sample_size, replace = TRUE)
  bwinsct <- (sample_ct_b == 1)
  probabilityb_ct<- mean(bwinsct)
  resultsb_ct[i]<- probabilityb_ct
}

```

```{r}
# Trump Delaware

t_func_de<- function(a) { 
  (a-a*.34603)/.34603}

delaware<- 1018396
n<- 10000
sample_size <- 1000
resultst_de <- matrix(0, nrow = n, ncol = 1)

a<- 10
t_de<- rbeta(n,a,t_func_de(a))
pop_de_t <- rbinom(delaware, size = 1, t_de)

for (i in 1:n) {
  sample_de_t <- sample(pop_de_t, size = sample_size, replace = TRUE)
  twinsde <- (sample_de_t == 1)
  probabilityt_de<- mean(twinsde)
  resultst_de[i]<- probabilityt_de
}

```

```{r}
# Biden Delaware

b_func_de<- function(a) { 
  (a-a*.58855)/.58855}

delaware<- 1018396
n<- 10000
sample_size <- 1000
resultsb_de <- matrix(0, nrow = n, ncol = 1)

a<- 10
b_de<- rbeta(n,a,b_func_de(a))
pop_de_b <- rbinom(delaware, size = 1, b_de)

for (i in 1:n) {
  sample_de_b <- sample(pop_de_b, size = sample_size, replace = TRUE)
  bwinsde <- (sample_de_b == 1)
  probabilityb_de<- mean(bwinsde)
  resultsb_de[i]<- probabilityb_de
}

```

```{r}
# Trump DC

t_func_dc<- function(a) { 
  (a-a*.05783)/.05783}

dc<- 670803
n<- 10000
sample_size <- 1000
resultst_dc <- matrix(0, nrow = n, ncol = 1)

a<- 10
t_dc<- rbeta(n,a,t_func_dc(a))
pop_dc_t <- rbinom(dc, size = 1, t_dc)

for (i in 1:n) {
  sample_dc_t <- sample(pop_dc_t, size = sample_size, replace = TRUE)
  twinsdc <- (sample_dc_t == 1)
  probabilityt_dc<- mean(twinsdc)
  resultst_dc[i]<- probabilityt_dc
}

```

```{r}
# Biden DC

b_func_dc<- function(a) { 
  (a-a*.90773)/.90773}

dc<- 670803
n<- 10000
sample_size <- 1000
resultsb_dc <- matrix(0, nrow = n, ncol = 1)

a<- 10
b_dc<- rbeta(n,a,b_func_dc(a))
pop_dc_b <- rbinom(dc, size = 1, b_dc)

for (i in 1:n) {
  sample_dc_b <- sample(pop_dc_b, size = sample_size, replace = TRUE)
  bwinsdc <- (sample_dc_b == 1)
  probabilityb_dc<- mean(bwinsdc)
  resultsb_dc[i]<- probabilityb_dc
}
```

```{r}
# Trump Florida

t_func_fl<- function(a) { 
  (a-a*.46619)/.46619}

florida<- 22244823
n<- 10000
sample_size <- 1000
resultst_fl <- matrix(0, nrow = n, ncol = 1)

a<- 10
t_fl<- rbeta(n,a,t_func_fl(a))
pop_fl_t <- rbinom(florida, size = 1, t_fl)

for (i in 1:n) {
  sample_fl_t <- sample(pop_fl_t, size = sample_size, replace = TRUE)
  twinsfl <- (sample_fl_t == 1)
  probabilityt_fl<- mean(twinsfl)
  resultst_fl[i]<- probabilityt_fl
}

```

```{r}
# Biden Florida

b_func_fl<- function(a) { 
  (a-a*.49080)/.49080}

florida<- 22244823
n<- 10000
sample_size <- 1000
resultsb_fl <- matrix(0, nrow = n, ncol = 1)

a<- 10
b_fl<- rbeta(n,a,b_func_fl(a))
pop_fl_b <- rbinom(florida, size = 1, b_fl)

for (i in 1:n) {
  sample_fl_b <- sample(pop_fl_b, size = sample_size, replace = TRUE)
  bwinsfl <- (sample_fl_b == 1)
  probabilityb_fl<- mean(bwinsfl)
  resultsb_fl[i]<- probabilityb_fl
}
```

```{r}
# Trump Georgia 

t_func_ga<- function(a) { 
  (a-a*.47367)/.47367}

georgia<- 10912876
n<- 10000
sample_size <- 1000
resultst_ga <- matrix(0, nrow = n, ncol = 1)

a<- 10
t_ga<- rbeta(n,a,t_func_ga(a))
pop_ga_t <- rbinom(georgia, size = 1, t_ga)

for (i in 1:n) {
  sample_ga_t <- sample(pop_ga_t, size = sample_size, replace = TRUE)
  twinsga <- (sample_ga_t == 1)
  probabilityt_ga<- mean(twinsga)
  resultst_ga[i]<- probabilityt_ga
}

```

```{r}
# Biden Georgia 

b_func_ga<- function(a) { 
  (a-a*.48540)/.48540}

georgia<- 10912876
n<- 10000
sample_size <- 1000
resultsb_ga <- matrix(0, nrow = n, ncol = 1)

a<- 10
b_ga<- rbeta(n,a,b_func_ga(a))
pop_ga_b <- rbinom(georgia, size = 1, b_ga)

for (i in 1:n) {
  sample_ga_b <- sample(pop_ga_b, size = sample_size, replace = TRUE)
  bwinsga <- (sample_ga_b == 1)
  probabilityb_ga<- mean(bwinsga)
  resultsb_ga[i]<- probabilityb_ga
}

```

```{r}
# Trump Hawaii

t_func_ha<- function(a) { 
  (a-a*.29959)/.29959}

hawaii<- 1440196
n<- 10000
sample_size <- 1000
resultst_ha <- matrix(0, nrow = n, ncol = 1)

a<- 10
t_ha<- rbeta(n,a,t_func_ha(a))
pop_ha_t <- rbinom(hawaii, size = 1, t_ha)

for (i in 1:n) {
  sample_ha_t <- sample(pop_ha_t, size = sample_size, replace = TRUE)
  twinsha <- (sample_ha_t == 1)
  probabilityt_ha<- mean(twinsha)
  resultst_ha[i]<- probabilityt_ha
}

```

```{r}
# Biden Hawaii

b_func_ha<- function(a) { 
  (a-a*.64306)/.64306}

hawaii<- 1440196
n<- 10000
sample_size <- 1000
resultsb_ha <- matrix(0, nrow = n, ncol = 1)

a<- 10
b_ha<- rbeta(n,a,b_func_ha(a))
pop_ha_b <- rbinom(hawaii, size = 1, b_ha)

for (i in 1:n) {
  sample_ha_b <- sample(pop_ha_b, size = sample_size, replace = TRUE)
  bwinsha <- (sample_ha_b == 1)
  probabilityb_ha<- mean(bwinsha)
  resultsb_ha[i]<- probabilityb_ha
}

```

```{r}
# Trump Idaho

t_func_id<- function(a) { 
  (a-a*.56589)/.56589}

idaho<- 1939033
n<- 10000
sample_size <- 1000
resultst_id <- matrix(0, nrow = n, ncol = 1)

a<- 10
t_id<- rbeta(n,a,t_func_id(a))
pop_id_t <- rbinom(idaho, size = 1, t_id)

for (i in 1:n) {
  sample_id_t <- sample(pop_id_t, size = sample_size, replace = TRUE)
  twinsid <- (sample_id_t == 1)
  probabilityt_id<- mean(twinsid)
  resultst_id[i]<- probabilityt_id
}

```

```{r}
# Biden Idaho

b_func_id<- function(a) { 
  (a-a*.38451)/.38451}

idaho<- 1939033
n<- 10000
sample_size <- 1000
resultsb_id <- matrix(0, nrow = n, ncol = 1)

a<- 10
b_id<- rbeta(n,a,b_func_id(a))
pop_id_b <- rbinom(idaho, size = 1, b_id)

for (i in 1:n) {
  sample_id_b <- sample(pop_id_b, size = sample_size, replace = TRUE)
  bwinsid <- (sample_id_b == 1)
  probabilityb_id<- mean(bwinsid)
  resultsb_id[i]<- probabilityb_id
}

```

```{r}
# Trump Illinois

t_func_il<- function(a) { 
  (a-a*.39009)/.39009}

illinois<- 12582032
n<- 10000
sample_size <- 1000
resultst_il <- matrix(0, nrow = n, ncol = 1)

a<- 10
t_il<- rbeta(n,a,t_func_il(a))
pop_il_t <- rbinom(illinois, size = 1, t_il)

for (i in 1:n) {
  sample_il_t <- sample(pop_il_t, size = sample_size, replace = TRUE)
  twinsil <- (sample_il_t == 1)
  probabilityt_il<- mean(twinsil)
  resultst_il[i]<- probabilityt_il
}

```

```{r}
# Biden Illinois

b_func_il<- function(a) { 
  (a-a*.55020)/.55020}

illinois<- 12582032
n<- 10000
sample_size <- 1000
resultsb_il <- matrix(0, nrow = n, ncol = 1)

a<- 10
b_il<- rbeta(n,a,b_func_il(a))
pop_il_b <- rbinom(illinois, size = 1, b_il)

for (i in 1:n) {
  sample_il_b <- sample(pop_il_b, size = sample_size, replace = TRUE)
  bwinsil <- (sample_il_b == 1)
  probabilityb_il<- mean(bwinsil)
  resultsb_il[i]<- probabilityb_il
}

```

```{r}
# Trump Indiana

t_func_in<- function(a) { 
  (a-a*.52853)/.52853}

indiana<- 6833037
n<- 10000
sample_size <- 1000
resultst_in <- matrix(0, nrow = n, ncol = 1)

a<- 10
t_in<- rbeta(n,a,t_func_in(a))
pop_in_t <- rbinom(indiana, size = 1, t_in)

for (i in 1:n) {
  sample_in_t <- sample(pop_in_t, size = sample_size, replace = TRUE)
  twinsin <- (sample_in_t == 1)
  probabilityt_in<- mean(twinsin)
  resultst_in[i]<- probabilityt_in
}

```

```{r}
# Biden Indiana

b_func_in<- function(a) { 
  (a-a*.42033)/.42033}

indiana<- 6833037
n<- 10000
sample_size <- 1000
resultsb_in <- matrix(0, nrow = n, ncol = 1)

a<- 10
b_in<- rbeta(n,a,b_func_in(a))
pop_in_b <- rbinom(indiana, size = 1, b_in)

for (i in 1:n) {
  sample_in_b <- sample(pop_in_b, size = sample_size, replace = TRUE)
  bwinsin <- (sample_in_b == 1)
  probabilityb_in<- mean(bwinsin)
  resultsb_in[i]<- probabilityb_in
}

```

```{r}
# Trump Iowa

t_func_ia<- function(a) { 
  (a-a*.47595)/.47595}

iowa<- 3200517
n<- 10000
sample_size <- 1000
resultst_ia <- matrix(0, nrow = n, ncol = 1)

a<- 10
t_ia<- rbeta(n,a,t_func_ia(a))
pop_ia_t <- rbinom(iowa, size = 1, t_ia)

for (i in 1:n) {
  sample_ia_t <- sample(pop_ia_t, size = sample_size, replace = TRUE)
  twinsia <- (sample_ia_t == 1)
  probabilityt_ia<- mean(twinsia)
  resultst_ia[i]<- probabilityt_ia
}

```

```{r}
# Biden Iowa

b_func_ia<- function(a) { 
  (a-a*.46311)/.46311}

iowa<- 3200517
n<- 10000
sample_size <- 1000
resultsb_ia <- matrix(0, nrow = n, ncol = 1)

a<- 10
b_ia<- rbeta(n,a,b_func_ia(a))
pop_ia_b <- rbinom(iowa, size = 1, b_ia)

for (i in 1:n) {
  sample_ia_b <- sample(pop_ia_b, size = sample_size, replace = TRUE)
  bwinsia <- (sample_ia_b == 1)
  probabilityb_ia<- mean(bwinsia)
  resultsb_ia[i]<- probabilityb_ia
}

```

```{r}
# Trump Kansas

t_func_ks<- function(a) { 
  (a-a*.53863)/.53863}

kansas<- 2937150
n<- 10000
sample_size <- 1000
resultst_ks <- matrix(0, nrow = n, ncol = 1)

a<- 10
t_ks<- rbeta(n,a,t_func_ks(a))
pop_ks_t <- rbinom(kansas, size = 1, t_ks)

for (i in 1:n) {
  sample_ks_t <- sample(pop_ks_t, size = sample_size, replace = TRUE)
  twinsks <- (sample_ks_t == 1)
  probabilityt_ks<- mean(twinsks)
  resultst_ks[i]<- probabilityt_ks
}

```

```{r}
# Biden Kansas

b_func_ks<- function(a) { 
  (a-a*.40953)/.40953}

kansas<- 2937150
n<- 10000
sample_size <- 1000
resultsb_ks <- matrix(0, nrow = n, ncol = 1)

a<- 10
b_ks<- rbeta(n,a,b_func_ks(a))
pop_ks_b <- rbinom(kansas, size = 1, b_ks)

for (i in 1:n) {
  sample_ks_b <- sample(pop_ks_b, size = sample_size, replace = TRUE)
  bwinsks <- (sample_ks_b == 1)
  probabilityb_ks<- mean(bwinsks)
  resultsb_ks[i]<- probabilityb_ks
}

```

# Electoral College Count
```{r}

electoraldem <- matrix(0, nrow = 17, ncol = 1)
electoralrep<- matrix(0, nrow = 17, ncol = 1)

aldem<- sample(resultsb_alab,1)
alrep<- sample(resultst_alab,1)

akdem<- sample(resultsb_ak,1)
akrep<- sample(resultst_ak,1)

azdem<- sample(resultsb_az,1)
azrep<- sample(resultst_az,1)

ardem<- sample(resultsb_ar,1)
arrep<- sample(resultst_ar,1)

cadem<- sample(resultsb_cali,1)
carep<- sample(resultst_cali,1)

codem<- sample(resultsb_co,1)
corep<- sample(resultst_co,1)

ctdem<- sample(resultsb_ct,1)
ctrep<- sample(resultst_ct,1)

dcdem<- sample(resultsb_dc,1)
dcrep<- sample(resultst_dc,1)

dedem<- sample(resultsb_de,1)
derep<- sample(resultst_de,1)

fldem<- sample(resultsb_fl,1)
flrep<- sample(resultst_fl,1)

gadem<- sample(resultsb_ga,1)
garep<- sample(resultst_ga,1)

hadem<- sample(resultsb_ha,1)
harep<- sample(resultst_ha,1)

iadem<- sample(resultsb_ia,1)
iarep<- sample(resultst_ia,1)

iddem<- sample(resultsb_id,1)
idrep<- sample(resultst_id,1)

ildem<- sample(resultsb_il,1)
ilrep<- sample(resultst_il,1)

indem<- sample(resultsb_in,1)
inrep<- sample(resultst_in,1)

ksdem<- sample(resultsb_ks,1)
ksrep<- sample(resultst_ks,1)

if (ksdem > ksrep) {
  electoraldem[1,] <-  6
} else {
  electoralrep[1,]<-  6
}

if (indem > inrep) {
  electoraldem[2,] <-  11
} else {
  electoralrep[2,]<-  11
}

if (ildem > ilrep) {
  electoraldem[3,] <-  19
} else {
  electoralrep[3,]<-  19
}

if (iddem > idrep) {
  electoraldem[4,] <-  4
} else {
  electoralrep[4,]<-  4
}

if (iadem > iarep) {
  electoraldem[5,] <-  6
} else {
  electoralrep[5,]<-  6
}

if (hadem > harep) {
  electoraldem[6,] <-  4
} else {
  electoralrep[6,]<-  4
}

if (gadem > garep) {
  electoraldem[7,] <-  16
} else {
  electoralrep[7,]<-  16
}

if (fldem > flrep) {
  electoraldem[8,] <-  30
} else {
  electoralrep[8,]<-  30
}

if (dedem > derep) {
  electoraldem[9,] <-  3
} else {
  electoralrep[9,]<-  3
}

if (dcdem > dcrep) {
  electoraldem[10,] <-  3
} else {
  electoralrep[10,]<-  3
}

if (ctdem > ctrep) {
  electoraldem[11,] <-  7
} else {
  electoralrep[11,]<-  7
}

if (codem > corep) {
  electoraldem[12,] <-  10
} else {
  electoralrep[12,]<-  10
}

if (cadem > carep) {
  electoraldem[13,] <-  54
} else {
  electoralrep[13,]<-  54
}

if (azdem > azrep) {
  electoraldem[14,] <-  11
} else {
  electoralrep[14,]<- 11
}

if (ardem > arrep) {
  electoraldem[15,] <-  6
} else {
  electoralrep[15,]<-  6
}

if (aldem > alrep) {
  electoraldem[16,] <-  9
} else {
  electoralrep[16,]<-  9
}

if (akdem > akrep) {
  electoraldem[17,] <-  3
} else {
  electoralrep[17,]<-  3
}

```
